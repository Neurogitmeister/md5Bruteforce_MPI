1. Обработка входных аргументов main (библиотека)


    1.1. Парсинг алфавита (функция)

	1.1.1. Версия с аллоцированием памяти внутри функции по адресу указателя на массив типа char (char***)
		для задания нового размера алфавита.

	1.1.2. Версия с прямой записью в уже аллоцированный массив фиксированной длины, поданный в функцию

	1.1.3. Сортировка алфавита по возрастанию ASCII кодов символов

	1.1.4. Удаление повторений из отсортированного алфавита


    1.2. Парсинг строки вида ХХХ-YYY где XXX, YYY числа любого размера, задающие диапазон длин слов (функция)


    1.3. Определение количества итераций по входным аргументам (библиотека, ниже список функций)

	1.3.1. Определение суммы геометрической прогрессии

	1.3.2. Определение суммы перестановок для отдельного процесса по номеру процесса

	1.3.3. Вывод на экран последовательной версии подпространств перестановок
		в прямом и обратном порядке

	1.3.4. Вывод на экран параллельной версии подпространств перестановок :
		Вывод синхронизирован по возрастанию рангов процессов, выводятся лишь уникальные сообщения
		из сортированного списка сообщений от процессов с указанием диапазонов рангов одинаковых сообщений


2. Проверки всех слов из диапазона длин min-max на заданном алфавите на коллизию с заданным(-ми) хэшэм(-ми) отдельной функцией (main)


    2.1. Цикл обхода по длинам слов в прямом и обратном порядке


    2.2. Алгоритм перебора перестановок букв алфавита в слове (функция)

	2.2.1. Определение стартовых индексов на каждой высоте дерева for() по размеру блока вычислений на последнем уровне


    2.3. Хэширование и проверка на коллизии (библиотека)

	2.3.1. Хэширование слова одной любой функцией из набора, определяемой макросом из компиляционного файла (функции)

    	2.3.2. Сравнение полученного хэша с базой хэшэй (функция)


    2.4. Запись всех найденных коллизий в один массив (хранящийся в процессе с рангом root для параллельной версии) (main)


    2.5. Дополнения для параллельной версии

	2.5.1. Проверка остатков от распределения вариантов слов по процессам, если таковые имеются (функция)

	2.5.2. Организация отсутствие простоев и оптимизация загрузки при количестве процессов большем, чем доступных перестановок



3. Реализация компиляции разных версий основной программы с помощью макросов


    3.1. Сравнение с базой хэшей или с одним для точечного взлома


    3.2. Выход при первой найденной коллизии 		(вкл./выкл. #define STOP_ON_FIRST) 

	3.2.1. Версия с последовательным проходом по всем длинам слов диапазона min-max в прямом или обратном порядке

	3.2.2. Версия с немедленным обрывом вычислений последовательной версии при нахождении первой коллизии

	3.2.3. Версия с обрывом вычислений параллельной версии с редуцированием
		по кратным константе значениям счётчика (perm_running % SYNC_CONST)


    3.3. Снятие и вывод на экран замеров времени (вкл./выкл. #define MEASURE_TIME)

	3.3.1. Отключение всех замеров времени
			(выкл. #define MEASURE_TIME)

	3.3.4. Замер общей суммы времени до получения массива из всех коллизий
			(вкл. #define MEASURE_TIME)

	3.3.2. Вывод на экран отдельных замеров на каждой длине слова
			(вкл./выкл. #define MEASURE_SEPARATE_LENGTHS)

	3.3.3. Вывод на экран замеров сумм времен от стартовой длины слова до каждой следующей вплоть до конечной
			(вкл./выкл. #define MEASURE_TOTAL_PERMS)

	
	3.3.5. Дополнение для параллельной версии

	    3.3.5.1. Взятие минимального, максимального и среднего значений из всех замеров между процессами

	    3.3.5.1. Синхронизированный вывод замеров времени по одной длине в порядке возрастания рангов



    3.1. Динамическое и статическое выделение памяти 	(вкл./выкл.#define MALLOC) 


	3.1.1 Статическое выделение памяти массивам постоянной длины исходя из макросовых констант компиляционного файла

	3.1.2. Динамическое выделение памяти массивам исходя из входных аргументов функции


	    3.1.2.1. Расширение массива коллизий в процессе работы программы на константные порции

	    3.1.2.2. Алфавит с размером массива равным длине строки алфавита

	    3.1.2.3. Массив индексов букв в слове по максимальной требуемой длине слова












